<section id='shopify-section-main-product' class='w-full pt-44 pb-16 flex flex-col md:flex-row items-center justify-center'>
  <div class='container flex flex-col md:flex-row justify-between gap-8'>
    <div class='product-gallery w-full max-w-[555px] h-full lg:h-[60vh] flex flex-col gap-16 justify-between'>
      <div class="product-images flex flex-row gap-4 order-2 lg:order-1 justify-center">
        {% for media in product.media %}
          {% if media.media_type == 'image' %}
            <div class="product-image aspect-square w-[50px] h-[50px] overflow-hidden">
              <img 
                src="{{ media | img_url: '75x75' }}" 
                data-full="{{ media | img_url: 'master' }}" 
                alt="{{ media.alt | escape | default: product.title }}" 
                class="thumb cursor-pointer w-full h-auto object-contain transition hover:opacity-80"
                loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
              >
            </div>
          {% endif %}
        {% endfor %}
      </div>
      <div class="h-[450px] lg:h-[40vh] w-full text-center aspect-w-4 aspect-h-5 ">
        <img 
          id="main-product-image"
          src="{{ product.featured_image | img_url: 'master' }}" 
          alt="{{ product.title }}" 
          class="h-full w-full object-contain transition-opacity duration-500"
        >
      </div>
    </div>
    <div class='product-details w-full lg:w-1/2 max-w-[500px]'>
      <!-- product info block -->
      <div class='product-info pb-8 border-b'>
        <h1 class='text-4xl font-bold text-primary mb-4'>{{ product.title | upcase }}</h1>
        <div class='text-sm text-white h-max max-w-full md:max-w-[420px] mb-12'>{{ product.description }}</div>
        <div id='variant-price' class='text-3xl font-bold text-primary'>$39.99{{ variant.price | money }}</div>
      </div>

      <div class='product-variant-select pb-8 border-b'>
        <p class='py-4 text-base text-white'>Choose your quantity:</p>
        <div class='variant-well flex py-4 gap-8'>
          {% for variant in product.variants %}
            {% if forloop.first %}
              <div
                class='variant-button p-4 border hover:cursor-pointer hover:border-primary active'
                data-variant-id='{{ variant.id }}'
                data-variant-price='{{ variant.price }}'
                data-default="true"
                onclick='handleVariantClick(event, "{{ variant.id }}", "{{ variant.price | json }}")'
              >
                <h3 class=''>{{ variant.title }}</h3>
                <input
                  type='radio'
                  name='variant'
                  id='variant-{{ variant.id }}'
                  value='{{ variant.id }}'
                  hidden
                >
              </div>
              {% else %}
              <div
                class='variant-button p-4 border hover:cursor-pointer hover:border-primary'
                data-variant-id='{{ variant.id }}'
                data-variant-price='{{ variant.price }}'
                data-default="true"
                onclick='handleVariantClick(event, "{{ variant.id }}", "{{ variant.price | json }}")'
              >
                <h3 class=''>{{ variant.title }}</h3>
                <input
                  type='radio'
                  name='variant'
                  id='variant-{{ variant.id }}'
                  value='{{ variant.id }}'
                  hidden
                >
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
      {% render 'add-to-cart-btn' %}
      </div>
    </div>
  </div>
</section>


<script>
document.addEventListener('DOMContentLoaded', () => {
  // product variant image resetting
  const mainImage = document.getElementById("main-product-image");
  const thumbs = document.querySelectorAll(".thumb");

  thumbs.forEach(thumb => {
    thumb.addEventListener("click", () => {
      const newSrc = thumb.getAttribute("data-full");
      const newAlt = thumb.getAttribute("alt");
      mainImage.classList.add("opacity-0");
      setTimeout(() => {
        mainImage.src = newSrc;
        mainImage.alt = newAlt;
        mainImage.onload = () => mainImage.classList.remove("opacity-0");
      }, 200);      

      // Optional: add a simple active border highlight
      thumbs.forEach(t => t.classList.remove("border-2", "border-primary"));
      thumb.classList.add("border-2", "border-primary");
    });
  });


  const variantButtons = document.querySelectorAll('.variant-button');
  const priceField = document.getElementById('variant-price');
  const hiddenInput = document.getElementById('selected-variant-id');
  const addToCartBtn = document.getElementById('add-to-cart-btn');

  // Preselect default variant
  const defaultButton = document.querySelector('.variant-button[data-default="true"]');
  if (defaultButton) {
    selectVariant(defaultButton);
  }

  variantButtons.forEach(button => {
    button.addEventListener('click', () => {
      // If this button is already active, do nothing (cannot unselect)
      if (button.classList.contains('active')) return;
      selectVariant(button);
    });
  });

  function selectVariant(button) {
    // Clear active state on all buttons
    variantButtons.forEach(btn => {
      btn.classList.remove('active', 'border-primary');
      const input = btn.querySelector('input[type="radio"]');
      if (input) input.checked = false;
    });

    // Set active on clicked
    button.classList.add('active', 'border-primary');
    const input = button.querySelector('input[type="radio"]');
    if (input) input.checked = true;

    // Update hidden input for form
    const variantId = button.dataset.variantId;
    if (hiddenInput) hiddenInput.value = variantId;

    // Update price field
    const variantPrice = button.dataset.variantPrice;
    if (priceField && variantPrice) {
      const formatted = (variantPrice / 100).toLocaleString('en-US', {
        style: 'currency',
        currency: 'USD'
      });
      priceField.textContent = formatted;
    }

    // Enable add to cart
    if (addToCartBtn) addToCartBtn.disabled = false;
  }
});
</script>